<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--
        注册springMVC的前端控制器，对浏览器所发送的请求统一进行处理
        在此配置下，springMVC的配置文件具有默认的位置和名称
        默认的位置：WEB-INF
        默认的名称：<servlet-name>-servlet.xml
        若要为springMVC的配置文件设置自定义的位置和名称
        需要在servlet标签中添加init-param
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        load-on-startup：将前端控制器DispatcherServlet的初始化时间提前到服务器启动时
    -->
    <!-- 部署 DispatcherServlet -->
    <servlet>
        <!--servlet-name 标签 Servlet 程序起一个别名（一般是类名） -->
        <servlet-name>springMVC</servlet-name>
        <!--servlet-class 是 Servlet 程序的全类名-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--为springMVC的配置文件设置自定义的位置和名称-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <!-- 表示容器再启动时立即初始化前端控制器DispatcherServlet -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!--servlet-mapping 标签给 servlet程序 配置访问地址-->
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <!-- 处理所有URL -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>